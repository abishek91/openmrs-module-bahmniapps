diff --git a/ui/app/clinical/controllers/patientDashboardVitalsController.js b/ui/app/clinical/controllers/patientDashboardVitalsController.js
index 958293a..af1ede8 100644
--- a/ui/app/clinical/controllers/patientDashboardVitalsController.js
+++ b/ui/app/clinical/controllers/patientDashboardVitalsController.js
@@ -1,5 +1,5 @@
 angular.module('bahmni.clinical')
-    .controller('PatientDashboardVitalsController', ['$scope', '$stateParams', 'patientVisitHistoryService', 'encounterService', 'conceptSetService', '$q', 'spinner', '$rootScope', function ($scope, $stateParams, patientVisitHistoryService, encounterService, conceptSetService, $q, spinner, $rootScope) {
+    .controller('PatientDashboardVitalsController', ['$scope', '$stateParams', 'patientVisitHistoryService', 'encounterService', 'observationsService', 'conceptSetService', '$q', 'spinner', '$rootScope', function ($scope, $stateParams, patientVisitHistoryService, encounterService, observationsService, conceptSetService, $q, spinner, $rootScope) {
         var bmiCalculator = new Bahmni.Common.BMI();
         $scope.patientSummary = {};
         $scope.patientUuid = $stateParams.patientUuid;
@@ -33,20 +33,31 @@ angular.module('bahmni.clinical')
 
         var createPatientSummary = function () {
             if ($scope.activeVisit) {
-                spinner.forPromise(encounterService.search($scope.activeVisit.uuid).then(function (encounterTransactionsResponse) {
-                    var visitData = createObservationsObject(encounterTransactionsResponse.data);
+//                spinner.forPromise(encounterService.search($scope.activeVisit.uuid).then(function (encounterTransactionsResponse) {
+//                    var visitData = createObservationsObject(encounterTransactionsResponse.data);
+//
+//                    var vitalsObservations = visitData.filter(isObservationForVitals);
+//                    var registrationObservations = visitData.filter(isObservationForRegistration);
+//                    var mappedVitalsObservations = new Bahmni.ConceptSet.ObservationMapper().getObservationsForView(vitalsObservations);
+//                    var mappedRegistrationObservations = new Bahmni.ConceptSet.ObservationMapper().getObservationsForView(registrationObservations);
+//                    var sortedRegistrationObservations = _.sortBy(mappedRegistrationObservations, function(obs){
+//                        return obs.concept.name;
+//                    });
+//
+//                    var vitalsAndRegistrationObservations = mappedVitalsObservations.concat(sortedRegistrationObservations);
+//
+//                    $scope.patientSummary.data = new Bahmni.Clinical.ResultGrouper().group(vitalsAndRegistrationObservations, observationGroupingFunction, 'obs', 'date');
+//                    if ($scope.patientSummary.data.length == 0) {
+//                        $scope.patientSummary.message = Bahmni.Clinical.Constants.messageForNoObservation;
+//                    }
+//                }));
 
-                    var vitalsObservations = visitData.filter(isObservationForVitals);
-                    var registrationObservations = visitData.filter(isObservationForRegistration);
-                    var mappedVitalsObservations = new Bahmni.ConceptSet.ObservationMapper().getObservationsForView(vitalsObservations);
-                    var mappedRegistrationObservations = new Bahmni.ConceptSet.ObservationMapper().getObservationsForView(registrationObservations);
-                    var sortedRegistrationObservations = _.sortBy(mappedRegistrationObservations, function(obs){
-                        return obs.concept.name;
-                    });
+                spinner.forPromise(observationsService.fetch("da679908-4b2f-4309-af74-6ae51d9c3b4b", ['Vitals', 'REGISTRATION_CONCEPTS']).then(function(observations) {
+                    console.log(observations.data);
 
-                    var vitalsAndRegistrationObservations = mappedVitalsObservations.concat(sortedRegistrationObservations);
+                    var bahmniObservations = new Bahmni.ConceptSet.ObservationMapper().forView(observations.data);
 
-                    $scope.patientSummary.data = new Bahmni.Clinical.ResultGrouper().group(vitalsAndRegistrationObservations, observationGroupingFunction, 'obs', 'date');
+                    $scope.patientSummary.data = new Bahmni.Clinical.ResultGrouper().group(bahmniObservations, observationGroupingFunction, 'obs', 'date');
                     if ($scope.patientSummary.data.length == 0) {
                         $scope.patientSummary.message = Bahmni.Clinical.Constants.messageForNoObservation;
                     }
diff --git a/ui/app/clinical/index.html b/ui/app/clinical/index.html
index 74a5811..19fbcf4 100644
--- a/ui/app/clinical/index.html
+++ b/ui/app/clinical/index.html
@@ -68,6 +68,7 @@
 
         <script src="../common/domain/init.js"></script>
         <script src="../common/domain/services/encounterService.js"></script>
+        <script src="../common/domain/services/observationsService.js"></script>
         <script src="../common/domain/services/dispositionService.js"></script>
         <script src="../common/domain/services/visitService.js"></script>
         <script src="../common/domain/encounterConfig.js"></script>
diff --git a/ui/app/clinical/views/dashboardSections/vitals.html b/ui/app/clinical/views/dashboardSections/vitals.html
index 79c1041..32a9351 100644
--- a/ui/app/clinical/views/dashboardSections/vitals.html
+++ b/ui/app/clinical/views/dashboardSections/vitals.html
@@ -7,7 +7,7 @@
 
             <div ng-repeat="observation in data.obs">
                 <fieldset>
-                    <div class="form-field" ng-class="{true: 'is-abnormal'}[observation.abnormal.value]">
+                    <div class="form-field" ng-class="{true: 'is-abnormal'}[observation.abnormal]">
                         <span class="field-attribute"><label>{{observation.concept.name}}</label></span>
                         <span class="value-text-only">{{observation.value}}</span>
                         <span class="label-add-on" ng-hide="!observation.concept.units"> {{observation.concept.units}}</span>
diff --git a/ui/app/common/concept-set/mappers/observationMapper.js b/ui/app/common/concept-set/mappers/observationMapper.js
index 2c83151..8ea1495 100644
--- a/ui/app/common/concept-set/mappers/observationMapper.js
+++ b/ui/app/common/concept-set/mappers/observationMapper.js
@@ -10,6 +10,15 @@ Bahmni.ConceptSet.ObservationMapper = function () {
         return mapObservation(rootConcept, savedObs, conceptSetConfig || {});
     };
 
+
+    this.forView = function(bahmniObservations) {
+        var map = _.map(bahmniObservations, function (bahmniObservation) {
+            return { "value": bahmniObservation.valueData.value, "abnormal": bahmniObservation.abnormal, "duration": bahmniObservation.duration,
+                "provider": "default_provider_needs_fix", "observationDateTime": bahmniObservation.obsDateTime, "concept": bahmniObservation.concept};
+        });
+        return  map;
+    };
+
     var findInSavedObservation = function (concept, observations) {
         return _.filter(observations, function (obs) {
             return obs && obs.concept && concept.uuid === obs.concept.uuid;
diff --git a/ui/app/common/constants.js b/ui/app/common/constants.js
index 091bcae..f7a3359 100644
--- a/ui/app/common/constants.js
+++ b/ui/app/common/constants.js
@@ -33,6 +33,7 @@ Bahmni.Common = Bahmni.Common || {};
         openmrsUrl: "/openmrs",
         idgenConfigurationURL: RESTWS_V1 + "/idgen/identifiersources",
         bahmniRESTBaseURL: BAHMNI_CORE + "",
+        observationsUrl: BAHMNI_CORE + "/observations",
         allTestsAndPanelsConceptName : 'All_Tests_and_Panels',
         dosageFrequencyConceptName : 'Dosage Frequency',
         dosageInstructionConceptName : 'Dosage Instructions',
