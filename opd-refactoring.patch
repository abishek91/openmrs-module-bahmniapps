diff --git a/app/consultation/app.js b/app/consultation/app.js
index b61fc83..b884a7b 100644
--- a/app/consultation/app.js
+++ b/app/consultation/app.js
@@ -11,7 +11,8 @@ angular.module('consultation').config(['$routeProvider', '$httpProvider', functi
         $routeProvider.when('/visit/:visitUuid/disposition', {templateUrl: 'modules/consultation/views/disposition.html',controller: 'DispositionController',resolve: {initialization: 'initialization'}});
         $routeProvider.when('/visit/:visitUuid/bed-management', {templateUrl: 'modules/bed-management/views/wardsList.html',controller: 'WardsListController',resolve: {initialization: 'initialization'}});
         $routeProvider.when('/visit/:visitUuid/bed-management/wardLayout/:wardId', {templateUrl: 'modules/bed-management/views/wardLayout.html',controller: 'WardLayoutController',resolve: {initialization: 'initialization'}});
-        $routeProvider.when('/visit/:visitUuid/concept-set/:conceptSet', {templateUrl: 'modules/concept-set/views/conceptSetView.html',controller: 'ConceptSetController',resolve: {initialization: 'initialization'}});
+        //$routeProvider.when('/visit/:visitUuid/concept-set/:conceptSet', {templateUrl: 'modules/concept-set/views/conceptSetView.html',controller: 'ConceptSetController',resolve: {initialization: 'initialization'}});
+        $routeProvider.when('/visit/:visitUuid/concept-set/:conceptSet', {templateUrl: 'modules/concept-set/views/conceptSetView.html',resolve: {initialization: 'initialization'}});
         $routeProvider.otherwise({redirectTo: Bahmni.Opd.Constants.activePatientsListUrl});
         $httpProvider.defaults.headers.common['Disable-WWW-Authenticate'] = true;
-}]);
\ No newline at end of file
+}]);
diff --git a/app/consultation/modules/concept-set/controllers/conceptSetController.js b/app/consultation/modules/concept-set/controllers/conceptSetController.js
index f1d0c07..6dc99cb 100644
--- a/app/consultation/modules/concept-set/controllers/conceptSetController.js
+++ b/app/consultation/modules/concept-set/controllers/conceptSetController.js
@@ -1,46 +1,11 @@
 'use strict';
 
 angular.module('opd.conceptSet.controllers')
-    .controller('ConceptSetController', ['$scope', '$rootScope','$route', 'ConceptSetService', function ($scope, $rootScope,$route, conceptSetService) {
+    /*.controller('ConceptSetController', ['$scope', '$rootScope','$route', 'ConceptSetService', function ($scope, $rootScope,$route, conceptSetService) {
 
-        if(!$rootScope.vitals || !$rootScope.vitals.conceptSet){
-            $scope.getConceptSet = function (name) {
-                console.log("in get concept set");
-                conceptSetService.getConceptSetMembers(name).success(function(response){
-                    if(response.results && response.results.length > 0){
-                        $rootScope.vitals.conceptSet = response.results[0].setMembers
-                    }
-                })
-            }
-
-        }
-
-        var conceptSetMap = {
-            "vitals":"VITALS_CONCEPT"
-        }
-
-        var constructObsList = function(){
-            var obsList = [];
-            for(var conceptUuid in $rootScope.vitals.conceptToObservationMap){
-                obsList.push($rootScope.vitals.conceptToObservationMap[conceptUuid]);
-            }
-            return obsList;
-        }
-       // var conceptSetName = $route.current.params.conceptSet;
 
-        $scope.getObsForConceptUuid = function(conceptUuid){
-            if($rootScope.vitals && $rootScope.vitals.conceptToObservationMap) {
-                return  $rootScope.vitals.conceptToObservationMap[conceptUuid];
-            }
-            return {};
-        }
-
-        $scope.$on('$destroy', function() {
-            console.log($rootScope.vitals);
-            $rootScope.vitals.recordedVitals = constructObsList();
-        });
-
-    }]).directive('showConcept',['$rootScope',function(rootScope){
+    }]).*/
+    .directive('showConcept',['$rootScope',function(rootScope){
         var getObsValueReference = function(conceptReference){
             return "conceptObsMap["+conceptReference+".uuid].value";
         }
@@ -75,5 +40,62 @@ angular.module('opd.conceptSet.controllers')
                     '</div></fieldset>' +
                 '</div>'
         }
+    }]).directive('showConceptSet',['$rootScope',function(rootScope){
+            var template =
+            '<form ng-init="getConceptSet(\'VITALS_CONCEPT\')">'+
+                '<div  ng-repeat="concept in conceptSet" >'+
+                    '<show-concept concept-obs-map="$parent.conceptToObservationMap" concept="concept" ></show-concept>'+
+                '</div>' +
+            '</form>' ;
+
+            var name = 'VITALS_CONCEPT';
+            var controller = function($scope,ConceptSetService){
+            rootScope[name] = rootScope[name] || {}
+
+            if(!rootScope[name].conceptSet){
+                $scope.getConceptSet = function (name) {
+                    console.log("in get concept set");
+                    ConceptSetService.getConceptSetMembers(name).success(function(response){
+                        if(response.results && response.results.length > 0){
+                            rootScope[name].conceptSet = response.results[0].setMembers;
+                            rootScope[name].conceptToObservationMap = new Bahmni.Opd.ObservationMapper(rootScope.encounterConfig)
+                                .map(rootScope.visit, rootScope[name].conceptSet);
+                        }
+                    })
+                }
+            }
+
+            var constructObsList = function(){
+                var obsList = [];
+                for(var conceptUuid in rootScope[name].conceptToObservationMap){
+                    obsList.push(rootScope[name].conceptToObservationMap[conceptUuid]);
+                }
+                return obsList;
+            }
+
+            $scope.getObsForConceptUuid = function(conceptUuid){
+                if(rootScope[name].conceptToObservationMap) {
+                    return  rootScope[name].conceptToObservationMap[conceptUuid];
+                }
+                return {};
+            }
+
+            /*$scope.$on('$destroy', function() {
+                console.log($rootScope.vitals);
+                $rootScope.vitals.recordedVitals = constructObsList();
+            });*/
+        }
+
+        return {
+            restrict: 'E',
+            scope :{
+                displayType:"@",
+                emptyObsCheck:"@",
+                conceptSetName:"@"
+            },
+            template :template,
+            controller : controller
+
+        }
     }])
 
diff --git a/app/consultation/modules/concept-set/mappers/observationMapper.js b/app/consultation/modules/concept-set/mappers/observationMapper.js
index 2ec4e68..8968f09 100644
--- a/app/consultation/modules/concept-set/mappers/observationMapper.js
+++ b/app/consultation/modules/concept-set/mappers/observationMapper.js
@@ -39,9 +39,6 @@ Bahmni.Opd.ObservationMapper = function(encounterConfig) {
             observations = opdEncounter.obs;
         }
 
-        return {
-            conceptToObservationMap:constructConceptToObsMap(conceptSet,observations,conceptToObservationMap)
-        };
-
+        return constructConceptToObsMap(conceptSet,observations,conceptToObservationMap)
     }
 }
diff --git a/app/consultation/modules/concept-set/views/conceptSetView.html b/app/consultation/modules/concept-set/views/conceptSetView.html
index 86737aa..75d9b3e 100644
--- a/app/consultation/modules/concept-set/views/conceptSetView.html
+++ b/app/consultation/modules/concept-set/views/conceptSetView.html
@@ -1,8 +1,9 @@
 
 <div class="vitals">
-<form>
+<!--<form>
         <div  ng-repeat="concept in $parent.vitals.conceptSet" >
             <show-concept concept-obs-map="$parent.$parent.vitals.conceptToObservationMap" concept="concept" ></show-concept>
         </div>
- </form>
+ </form>-->
+    <show-concept-set ></show-concept-set>
 </div>
diff --git a/app/consultation/modules/consultation/initialization.js b/app/consultation/modules/consultation/initialization.js
index d6828af..a7d6f36 100644
--- a/app/consultation/modules/consultation/initialization.js
+++ b/app/consultation/modules/consultation/initialization.js
@@ -50,7 +50,7 @@ angular.module('opd.consultation').factory('initialization',
                         configurationsPromises.resolve();
 
 
-                        return conceptSetService.getConceptSetMembers("VITALS_CONCEPT").success(function(response){
+                        /*return conceptSetService.getConceptSetMembers("VITALS_CONCEPT").success(function(response){
                             if(response.results && response.results.length > 0){
                                 var vitalsConceptSet = response.results[0].setMembers;
 
@@ -60,7 +60,7 @@ angular.module('opd.consultation').factory('initialization',
                                 $rootScope.vitals.conceptSet = vitalsConceptSet;
 
                             }
-                        });
+                        });*/
 
 
                     });
@@ -79,4 +79,4 @@ angular.module('opd.consultation').factory('initialization',
 
         return initializationPromise.promise;
     }]
-);
\ No newline at end of file
+);
